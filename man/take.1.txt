TAKE(1)
=======
:doctype: manpage


NAME
----
take - List Selection Utility


SYNOPSIS
--------
*take* ['OPTIONS']


DESCRIPTION
-----------

Purpose of take(1) is to provide a convenient way for selecting items
from a list within a text terminal interactively. *take* is the best
tool for filtering a selection when the list of items can't be matched
with wildcards or regexps, i.e. they don't share substrings.


INTRODUCTION
------------

*take* is a tool used for selecting items from a list interactively
and executing a command with the selection.

The list is generated by executing input-command or reading from
STDIN. After selection from the list is done, the output-command is
performed on the selection. If no output-command is defined, the
selected items are output to STDOUT.

Example invocation for deleting files:
....
  shell> ls | take -c "rm @"
....

Here the list is produced by 'ls' command. *take* is used to filter
the input list in order to define the files that should be
removed. The command option ('-c') is used by replacing "@" with each
selected item(s). For example if a file called "foo.txt" was selected,
then "rm foo.txt" would be executed.


LIST SELECTION
--------------

After *take* has the input list ready, the user uses one-key selection
commands to make the selection from list view on the terminal window.

Example list view:
....
  * Item1
  * Item2
    Item3
....

In the example list items "Item1" and "Item2" are selected and item
"Item3" is not selected.


The selection is performed using the following one-key commands:

  "J": Toggle selection and move down
  "K": Toggle selection and move up
  "j": Move down
  "k": Move up
  "n": Move down page
  "p": Move up page
  "b": Move to beginning of list
  "e": Move to end of list
  "g": Goto to <line> (or relative with +/- <line>)
  "s": Select current
  "r": Reject current
  "t": Toggle current
  "S": Select all items
  "R": Reject all items
  "T": Toggle all items
  "c": Toggle the next <count> items (or set/reset with +/- <count>)
  "m": Select items matching the prompted regexp (case sensitive)
  "M": Select items matching the prompted regexp (case insensitive)
  "f": Find mode with case sensitive matching (Keys: j,k,s,r,t,RET,ESC)
  "F": Find mode with case insensitive matching (Keys: j,k,s,r,t,RET,ESC)
  "v": View the list of commands that would be executed
  "i": View the current list entry content (if a text file)
  "l": Center list view on screen around current line
  "h": Show command help
  "x": Quit and execute output-command for selection
  "q": Quit and skip output-command execution


Typically the user presses "j" with or without SHIFT, i.e. moves down
and skips/selects lines. Moving up/down can be performed also page by
page with "p" and "n". "S", "R", "T" are used for affecting all the
lines.

"g" is used for jumping to an absolute line or for jumping relatively
from current line. The jump value is prompted from the user. A plain
number means absolute line number. "+" before the number means moving
down the number of lines, and "-" means moving up the number of lines.

"c" can be used to select multiple lines. The "count" is given to
prompt and has optional set/unset specifier. If value starts with "+"
then items are set and if with "-" items are unset. If the prompted
value is a plain number, then "count" items are toggled.

"m" and "f" can be used to select items based on regexp pattern. "m"
operates non-interactively by selecting all matching lines and "f"
operates interactively.

If files are to be removed with *take*, it is sensible to check the
list of commands before they are actually executed. "v" command can be
used for this.

Press "h" for online command help display.


OUTPUT COMMAND FORMATTING
-------------------------

The output-command syntax has a special tag ("@") for transferring the
selection into the output-command(s). "@" is replaced with the
selected item before output-command is executed. "@" may appear
multiple times in the command. "@_" means literal "@" in the
output, i.e. if the user needs the "@" character in the output and not
an item from the list selection.

By default the output-command is executed once per selected
line. The '-j' switch can be used to join selection with <join>
string. <join> string is " " by default. If selection is joined, the
output-command is executed only once and "@" is replaced with the
joined selection.

See:
....
  shell> take -h
....

for a complete list of command line options.



EXAMPLE EXECUTIONS
------------------

First, a safe trial:
....
  shell> take -a 'echo @'
....


Other Examples:

Example1: Pipe directory listing to *take* for file removal.
....
  shell> ls | take -c 'rm -f @'
....

Example2: Same as "Example1" but with selection joined.
....
  shell> ls | take -j -c 'rm -f @'
....

Example3: Same as "Example1" but without shell piping.
....
  shell> take -a 'rm -f @'
....

Example4: Echo input list selection with items surrounded by '@@' strings.
....
  shell> take -a 'echo @_@_@@_@_'
....

Example5: Select a list of files/dirs to be removed hierarchically.
....
  shell> take -i "find ." -c "rm -rf \"@\""
....


SHELL ALIASES/FUNCTIONS
-----------------------
These aliases (or functions) would be useful for shell users.

Function1: Select files to remove from current directory.
....
  alias lcrm='take -a "rm -rf \"@\""'
....


Function2: Select files to remove from current directory hierarchically.
....
  alias lcrrm='take -i \"find .\" -c "rm -rf \"@\""'
....



OPTIONS
-------
*-i, --input*='INPUT'::
    'INPUT' is a shell command that is used to create list for *take*.

*-l, --list*='DIR'::
    *take* creates the list from given directory or from current
    directory entries when no argument given to option. "." and ".."
    entries are neglegted.

*-c, --command*='COMMAND'::
    Option specifies the 'COMMAND' that is executed for each selected
    item. If *--join* option is given then the command is executed
    only once.

*-a, --auto*='AUTO'::
    This is a convenience option that is same as giving *--list* and
    *--command* options together. Option parameter is used the same
    way as with *--command*.

*-j, --join*='JOIN'::
    Join the selection using 'JOIN' as joining string. If option
    parameter is not given, the joining string is SPACE (" ").

*-p, --presel*::
    Selection list is preselected, i.e. each item in the list is
    marked selected. By default all items are non-selected.

*-pl, --presel_list*::
    Numbered list items are preselected. If *--presel* is given, then
    the numbered lines are actually inverted.

*-pf, --presel_file*='FILE'::
    Line numbers are taken from 'FILE'. The numbers are used to make
    preselection.  If *--presel* is given, then the numbered lines are
    actually inverted.

*-b, --batch*::
    Run *take* in batch mode. Interaction is skipped. In practice some
    form of pre-selection has to be performed, otherwise output is
    empty.

*-s, --selected*::
    Display selected line numbers to stdout. Output can be saved to
    for example *--presel_file* and later used in a script.

*-x, --no_exec*::
    Command given with *--command* is not executed if this option is
    given. Instead the commands are stored to a file. Option
    parameter defines the name of the output file. If omitted, STDOUT
    is used.



EXIT STATUS
-----------
*0*::
    Success

*1*::
    Failure (syntax or usage error)


AUTHOR
------
*take* was originally written by Tero Isannainen.


COPYING
-------
Copyright \(C) 2015, 2025 Tero Isannainen.
